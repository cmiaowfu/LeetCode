Solution 1: Brute Force
Time complexity: O(n^2)
Space complesity: O(1). No extra space required. 

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> index;
        for (int i = 0; i < nums.size(); ++i) 
        {
            int nums_j = target - nums[i];
            for (int j = i+1; j < nums.size(); ++j )
            {
                if (nums_j == nums[j]) 
                {
                    index.push_back(i);
                    index.push_back(j);
                    break;
                }
            }
        }
        return index;
    }
};

Solution 2: 
